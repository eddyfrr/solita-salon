"""
Django settings for solita_salon project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import dj_database_url
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vf+k1gy7=%$t#ve2sik#k_96596-l5&*vhzi@u_1-3ahy9%j(w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    'solita-beauty-bar.onrender.com',
    'localhost',
    '127.0.0.1'
    ]

# Or better (for dynamic deployment):
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)
    
    
    
CSRF_TRUSTED_ORIGINS = config('SCRF_TRUSTED_ORIGINS', default=('https://*.railway.app').split(','))
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'booking',
    'whitenoise.runserver_nostatic',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'solita_salon.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'solita_salon.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
      'default': dj_database_url.config(
          default=config('DATABASE_URL', default='postgresql://solita_admin:password@localhost:5432/solita_db'),
          conn_max_age=600
      )
  }



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,  # Explicitly set to match default
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'booking.validators.AlphanumericValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # collectstatic will put files here
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Render-specific settings
#if os.environ.get('RENDER'):
#    DEBUG = False
 #   ALLOWED_HOSTS = ['solita-beauty-bar.onrender.com']
  #  DATABASES = {
   #     'default': dj_database_url.config(conn_max_age=600)
    #}
    
    
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
LOGIN_URL = ' /login/'
 
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# login URL
LOGIN_URL = '/login/'


# Email Configuration (Elastic Email SMTP)
EMAIL_BACKEND = 'anymail.backends.elasticemail.EmailBackend'
ANYMAIL = {
    'ELASTICEMAIL_API_KEY' : config('ELASTICEMAIL_API_KEY', default=''),
}
EMAIL_HOST = 'smtp.elasticmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'edmundrwegasira@gmail.com'  # Replace with your Gmail address
EMAIL_HOST_PASSWORD = 'ldnp fude ngcu jgrk'  # Replace with your Gmail app password
DEFAULT_FROM_EMAIL = 'Solita Salon <edmundrwegasira@gmail.com>'  # Replace with your Gmail address


# ClickPesa Configuration
CLICKPESA_CLIENT_ID = 'IDURoLVb5VfCjgYHojoGh3VlFs459jxV'
CLICKPESA_API_KEY = 'SK7BLcOOzyMcBA68rDKcwbIHREfxLViknXjyRVdBXw'  # Replace with the new key from ClickPesa
CLICKPESA_API_URL = 'https://api.clickpesa.com'
CLICKPESA_SUCCESS_URL = 'https://3fb0-197-186-8-24.ngrok-free.app/success/'  # Redirect URL after payment
CLICKPESA_FAILURE_URL = 'https://3fb0-197-186-8-24.ngrok-free.app/my_bookings/'  # Redirect URL if payment fails